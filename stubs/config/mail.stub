{{{
  exports({ to: app.configPath('mail.ts') })
}}}
import env from '#start/env'
import { defineConfig, mailers } from "@adonisjs/mail";

export default defineConfig({
  /*
  |--------------------------------------------------------------------------
  | Default mailer
  |--------------------------------------------------------------------------
  |
  | The following mailer will be used to send emails, when you don't specify
  | a mailer
  |
  */
  default: '{{primaryDriver}}',

  /*
  |--------------------------------------------------------------------------
  | Mailers
  |--------------------------------------------------------------------------
  |
  | You can define or more mailers to send emails from your application. A
  | single 'driver' can be used to define multiple mailers with different
  | config.
  |
  | For example: Postmark driver can be used to have different mailers for
  | sending transactional and promotional emails
  |
  */
  mailers: {
		{{#if smtp}}
    /*
    |--------------------------------------------------------------------------
    | Smtp
    |--------------------------------------------------------------------------
    |
    | Uses SMTP protocol for sending email
    |
    */
    smtp: mailers.smtp({
      host: env.get('SMTP_HOST'),
      port: env.get('SMTP_PORT'),
			auth: {
				user: env.get('SMTP_USERNAME'),
				pass: env.get('SMTP_PASSWORD'),
				type: 'login',
			}
    }),
		{{/if}}
		{{#if ses}}
    /*
    |--------------------------------------------------------------------------
    | SES
    |--------------------------------------------------------------------------
    |
    | Uses Amazon SES for sending emails. You will have to install the
    | @aws-sdk/client-ses when using this driver.
    |
    | npm i @aws-sdk/client-ses
    |
    */
    ses: mailers.ses({
      apiVersion: '2010-12-01',
      key: env.get('SES_ACCESS_KEY'),
      secret: env.get('SES_ACCESS_SECRET'),
      region: env.get('SES_REGION'),
      sslEnabled: true,
      sendingRate: 10,
      maxConnections: 5,
    }),
		{{/if}}
		{{#if mailgun}}
    /*
    |--------------------------------------------------------------------------
    | Mailgun
    |--------------------------------------------------------------------------
    |
		| Uses Mailgun service for sending emails.
    |
    | If you are using an EU domain. Ensure to change the baseUrl to hit the
    | europe endpoint (https://api.eu.mailgun.net/v3).
    |
    */
    mailgun: mailers.mailgun({
      driver: 'mailgun',
      baseUrl: 'https://api.mailgun.net/v3',
      key: env.get('MAILGUN_API_KEY'),
      domain: env.get('MAILGUN_DOMAIN'),
    }),
		{{/if}}
		{{#if sparkpost}}
    /*
    |--------------------------------------------------------------------------
    | SparkPost
    |--------------------------------------------------------------------------
    |
		| Uses Sparkpost service for sending emails.
    |
    */
    sparkpost: mailers.sparkpost({
      baseUrl: 'https://api.sparkpost.com/api/v1',
      key: env.get('SPARKPOST_API_KEY'),
    }),
		{{/if}}
    {{#if brevo}}
    /*
    |--------------------------------------------------------------------------
    | Brevo (ex Sendinblue)
    |--------------------------------------------------------------------------
    |
    | Uses Brevo for sending emails.
    |
    */
    brevo: mailers.brevo({
      key: env.get('BREVO_API_KEY'),
    }),
    {{/if}}
    {{#if resend}}
    /*
    |--------------------------------------------------------------------------
    | Resend
    |--------------------------------------------------------------------------
    |
    | Uses Resend for sending emails.
    |
    */
    resend: mailers.resend({
      key: env.get('RESEND_API_KEY'),
    }),
    {{/if}}
  },
})
